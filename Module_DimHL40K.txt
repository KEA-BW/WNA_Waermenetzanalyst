// Decompiled with JetBrains decompiler
// Type: WNA.Module_DimHL40K
// Assembly: WNA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FAC526EC-E846-428F-BCE8-13C8E12BDBC7
// Assembly location: C:\Users\aneta.strzalka\Documents\ANSWERKommunal\ArcGIS\Installation\WNA\Install\WNA.dll

using ESRI.ArcGIS.ArcMapUI;
using ESRI.ArcGIS.Carto;
using ESRI.ArcGIS.Editor;
using ESRI.ArcGIS.esriSystem;
using ESRI.ArcGIS.Framework;
using ESRI.ArcGIS.Geodatabase;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using WNA.My;

namespace WNA
{
  [StandardModule]
  internal sealed class Module_DimHL40K
  {
    private const string c_sTargetLayer = "Hauptleitungen";
    private const string c_sSourceFieldName = "Akk_GZF";
    private const string c_sTargetFieldName = "DN_40K";

    [DebuggerNonUserCode]
    static Module_DimHL40K()
    {
    }

    public static void CalcDim_HL40K()
    {
      UID extensionCLSID = (UID) new UIDClass();
      ((IMouseCursor) new MouseCursorClass()).SetCursor((object) 2);
      IApplication application = ArcMap.Application;
      IMap focusMap = ((IMxDocument) application.Document).FocusMap;
      if ((IFeatureLayer) Module_AkkHL.UTIL_FindLayerByName(focusMap, "Hauptleitungen") == null)
        return;
      IFeatureClass featureClass = ((IFeatureLayer) Module_AkkHL.UTIL_FindLayerByName(focusMap, "Hauptleitungen")).FeatureClass;
      if ((double) featureClass.FindField("Akk_GZF") == -1.0)
        return;
      if (featureClass.FindField("DN_40K") != 1)
      {
        ISchemaLock schemaLock = (ISchemaLock) featureClass;
        try
        {
          schemaLock.ChangeSchemaLock(esriSchemaLock.esriExclusiveSchemaLock);
          IField Field = (IField) new FieldClass();
          IFieldEdit fieldEdit = (IFieldEdit) Field;
          fieldEdit.Type_2 = esriFieldType.esriFieldTypeDouble;
          fieldEdit.Name_2 = "DN_40K";
          featureClass.AddField(Field);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        finally
        {
        }
        schemaLock.ChangeSchemaLock(esriSchemaLock.esriSharedSchemaLock);
      }
      extensionCLSID[] = (object) "esriEditor.Editor";
      IEditor extensionByClsid = (IEditor) application.FindExtensionByCLSID(extensionCLSID);
      IDataset dataset = (IDataset) featureClass;
      if (extensionByClsid.EditState != esriEditState.esriStateEditing)
        extensionByClsid.StartEditing(dataset.Workspace);
      extensionByClsid.StartOperation();
      IQueryFilter filter = (IQueryFilter) new QueryFilterClass();
      filter.WhereClause = "[Akk_GZF] >=0 AND [Akk_GZF] <=62.5";
      IFeatureCursor featureCursor1 = featureClass.Update(filter, false);
      int field1 = featureCursor1.FindField("DN_40K");
      for (IFeature Object = featureCursor1.NextFeature(); Object != null; Object = featureCursor1.NextFeature())
      {
        Object.set_Value(field1, (object) 20);
        featureCursor1.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >62.5 AND [Akk_GZF] <=106.6";
      IFeatureCursor featureCursor2 = featureClass.Update(filter, false);
      int field2 = featureCursor2.FindField("DN_40K");
      for (IFeature Object = featureCursor2.NextFeature(); Object != null; Object = featureCursor2.NextFeature())
      {
        Object.set_Value(field2, (object) 25);
        featureCursor2.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >106.6 AND [Akk_GZF] <=200";
      IFeatureCursor featureCursor3 = featureClass.Update(filter, false);
      int field3 = featureCursor3.FindField("DN_40K");
      for (IFeature Object = featureCursor3.NextFeature(); Object != null; Object = featureCursor3.NextFeature())
      {
        Object.set_Value(field3, (object) 32);
        featureCursor3.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >200 AND [Akk_GZF] <=292";
      IFeatureCursor featureCursor4 = featureClass.Update(filter, false);
      int field4 = featureCursor4.FindField("DN_40K");
      for (IFeature Object = featureCursor4.NextFeature(); Object != null; Object = featureCursor4.NextFeature())
      {
        Object.set_Value(field4, (object) 40);
        featureCursor4.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >292 AND [Akk_GZF] <=546";
      IFeatureCursor featureCursor5 = featureClass.Update(filter, false);
      int field5 = featureCursor5.FindField("DN_40K");
      for (IFeature Object = featureCursor5.NextFeature(); Object != null; Object = featureCursor5.NextFeature())
      {
        Object.set_Value(field5, (object) 50);
        featureCursor5.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >546 AND [Akk_GZF] <=1037";
      IFeatureCursor featureCursor6 = featureClass.Update(filter, false);
      int field6 = featureCursor6.FindField("DN_40K");
      for (IFeature Object = featureCursor6.NextFeature(); Object != null; Object = featureCursor6.NextFeature())
      {
        Object.set_Value(field6, (object) 65);
        featureCursor6.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >1037 AND [Akk_GZF] <=1607";
      IFeatureCursor featureCursor7 = featureClass.Update(filter, false);
      int field7 = featureCursor7.FindField("DN_40K");
      for (IFeature Object = featureCursor7.NextFeature(); Object != null; Object = featureCursor7.NextFeature())
      {
        Object.set_Value(field7, (object) 80);
        featureCursor7.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >1607 AND [Akk_GZF] <=2859";
      IFeatureCursor featureCursor8 = featureClass.Update(filter, false);
      int field8 = featureCursor8.FindField("DN_40K");
      for (IFeature Object = featureCursor8.NextFeature(); Object != null; Object = featureCursor8.NextFeature())
      {
        Object.set_Value(field8, (object) 100);
        featureCursor8.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >2859 AND [Akk_GZF] <=4551";
      IFeatureCursor featureCursor9 = featureClass.Update(filter, false);
      int field9 = featureCursor9.FindField("DN_40K");
      for (IFeature Object = featureCursor9.NextFeature(); Object != null; Object = featureCursor9.NextFeature())
      {
        Object.set_Value(field9, (object) 125);
        featureCursor9.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >4551 AND [Akk_GZF] <=8323";
      IFeatureCursor featureCursor10 = featureClass.Update(filter, false);
      int field10 = featureCursor10.FindField("DN_40K");
      for (IFeature Object = featureCursor10.NextFeature(); Object != null; Object = featureCursor10.NextFeature())
      {
        Object.set_Value(field10, (object) 150);
        featureCursor10.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >8323 AND [Akk_GZF] <=18461";
      IFeatureCursor featureCursor11 = featureClass.Update(filter, false);
      int field11 = featureCursor11.FindField("DN_40K");
      for (IFeature Object = featureCursor11.NextFeature(); Object != null; Object = featureCursor11.NextFeature())
      {
        Object.set_Value(field11, (object) 200);
        featureCursor11.UpdateFeature(Object);
      }
      filter.WhereClause = "[Akk_GZF] >18461 AND [Akk_GZF] <=34694";
      IFeatureCursor featureCursor12 = featureClass.Update(filter, false);
      int field12 = featureCursor12.FindField("DN_40K");
      for (IFeature Object = featureCursor12.NextFeature(); Object != null; Object = featureCursor12.NextFeature())
      {
        Object.set_Value(field12, (object) 250);
        featureCursor12.UpdateFeature(Object);
      }
      extensionByClsid.StopOperation("CalcDim_HL_40K DN_40K");
      extensionByClsid.StopEditing(true);
    }
  }
}
